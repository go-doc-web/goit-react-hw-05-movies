{"version":3,"file":"static/js/957.502fc4bc.chunk.js","mappings":"uQACA,GAAgB,UAAY,6BAA6B,UAAY,8B,mBCM/DA,EAAW,SAAC,GAAe,IACzBC,EADwB,EAAZC,MACKC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACzB,gBAAaC,UAAWC,EAAAA,UAAxB,WACE,gBACED,UAAWC,EAAAA,SACXC,IAAKH,EAPQ,kCAOsBA,EAAeI,EAClDC,IAAKP,EACLQ,OAAQ,IACRC,OAAQ,OAEV,cAAGN,UAAWC,EAAAA,UAAd,SAA8BJ,KAC9B,eAAGG,UAAWC,EAAAA,eAAd,wBAA8CH,OATvCF,EADgB,IAa3B,OAAO,eAAII,UAAWC,EAAAA,UAAf,SAA+BR,GACvC,EAED,IAEAD,EAASe,aAAe,CACtBb,MAAO,IC1BT,OAAiB,ECsCjB,EA/BiB,WACf,OAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GAkBR,OAhBAoB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdL,GAAW,GAFG,UAGSM,EAAAA,EAAAA,IAAYtB,GAHrB,gBAGNa,EAHM,EAGNA,KAERC,GAAQ,OAAID,IALE,gDAOdK,EAAS,KAAMK,SAPD,yBASdP,GAAW,GATG,4EAAH,qDAYfK,GACD,GAAE,CAACrB,EAAIkB,EAAUF,EAAYF,KAG5B,qBAASV,UAAWC,EAAAA,KAApB,UACGU,IAAW,sCACXE,IAAS,kCACV,SAAC,EAAD,CAAUnB,MAAOe,MAGtB,C,yLChCKW,E,QAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QANY,sCAUHC,EAAmB,mCAAG,sGACVL,EAAIM,IAAJ,uBADU,uBACzBC,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAa,mCAAG,WAAMhC,GAAN,yFACJwB,EAAIM,IAAJ,iBAAkB9B,IADd,uBACnB+B,EADmB,EACnBA,KADmB,kBAGpBA,GAHoB,2CAAH,sDAMbE,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAAIM,IAAJ,gBAAyB,CAC9CH,OAAQ,CACNO,MAAAA,KAHwB,uBACpBH,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdT,EAAW,mCAAG,WAAMtB,GAAN,yFACFwB,EAAIM,IAAJ,iBAAkB9B,EAAlB,aADE,uBACjB+B,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH,sDAMXI,EAAc,mCAAG,WAAMnC,GAAN,yFACLwB,EAAIM,IAAJ,iBAAkB9B,EAAlB,aADK,uBACpB+B,EADoB,EACpBA,KACRK,QAAQC,IAAIN,GAFgB,kBAGrBA,GAHqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CastPage/CastItem/CastItems.module.css?8c77","pages/CastPage/CastItem/CastItem.jsx","pages/CastPage/CastPage.module.css","pages/CastPage/Castpage.jsx","shared/servises/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"CastItems_cast_list__Xorcm\",\"item_name\":\"CastItems_item_name__ebmvB\"};","import PropTypes from 'prop-types';\n\nimport css from './CastItems.module.css';\nimport defaultCastImg from '../../../resurse/images/no-poster-cast.jpg';\n\nconst baseImageUrl = 'https://image.tmdb.org/t/p/w342';\n\nconst CastItem = ({ items }) => {\n  const elements = items.map(({ id, name, character, profile_path }) => (\n    <li key={id} className={css.cast_item}>\n      <img\n        className={css.item_img}\n        src={profile_path ? baseImageUrl + profile_path : defaultCastImg}\n        alt={name}\n        widtch={200}\n        height={150}\n      />\n      <p className={css.item_name}>{name}</p>\n      <p className={css.item_character}>Character: {character}</p>\n    </li>\n  ));\n  return <ul className={css.cast_list}>{elements}</ul>;\n};\n\nexport default CastItem;\n\nCastItem.defaultProps = {\n  items: [],\n};\n\nCastItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { getCastById } from '../../shared/servises/movie-api';\nimport CastItem from './CastItem/CastItem';\n\nimport css from './CastPage.module.css';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const { cast } = await getCastById(id);\n\n        setCast([...cast]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [id, setError, setLoading, setCast]);\n\n  return (\n    <section className={css.cast}>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error</p>}\n      <CastItem items={cast} />\n    </section>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst API_KEY = '424988524fcdd3be3cb6b3927eeba2ee';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendMoviesToday = async () => {\n  const { data } = await api.get(`/trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await api.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getSearchPosts = async query => {\n  const { data } = await api.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await api.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await api.get(`/movie/${id}/reviews`);\n  console.log(data);\n  return data;\n};\n"],"names":["CastItem","elements","items","map","id","name","character","profile_path","className","css","src","defaultCastImg","alt","widtch","height","defaultProps","useState","cast","setCast","loading","setLoading","error","setError","useParams","useEffect","fetchCast","getCastById","message","api","axios","baseURL","params","api_key","getTrendMoviesToday","get","data","getMoviesById","getSearchPosts","query","getReviewsById","console","log"],"sourceRoot":""}