{"version":3,"file":"static/js/891.b054b492.chunk.js","mappings":"uQACA,GAAgB,aAAe,kCAAkC,aAAe,kCAAkC,eAAiB,qC,SCG7HA,EAAc,SAAC,GAAe,IAC5BC,EAD2B,EAAZC,MACEC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACzB,gBAAaC,UAAWC,EAAAA,aAAxB,WACE,eAAGD,UAAWC,EAAAA,eAAd,oBAA0CH,MAC1C,cAAGE,UAAWC,EAAAA,gBAAd,SAAoCF,MAF7BF,EADgB,IAM3B,OAAO,eAAIG,UAAWC,EAAAA,aAAf,SAAkCP,GAC1C,EAED,IAEAD,EAAYS,aAAe,CACzBP,MAAO,ICRT,IAgCA,EAhCoB,WAClB,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQZ,GAAOa,EAAAA,EAAAA,MAAPb,GAkBR,OAhBAc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEdL,GAAW,GAFG,UAGYM,EAAAA,EAAAA,IAAehB,GAH3B,gBAGNiB,EAHM,EAGNA,QAERT,GAAW,OAAIS,IALD,gDAOdL,EAAS,KAAMM,SAPD,yBASdR,GAAW,GATG,4EAAH,qDAYfK,GACD,GAAE,CAACf,EAAIY,EAAUF,EAAYF,KAG5B,+BACGC,IAAW,sCACXE,IAAS,kCACRJ,EAAQY,OAAS,IAAK,uCACxB,SAAC,EAAD,CAAarB,MAAOS,MAGzB,C,yLClCKa,E,QAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QANY,sCAUHC,EAAmB,mCAAG,sGACVL,EAAIM,IAAJ,uBADU,uBACzBC,EADyB,EACzBA,KADyB,kBAG1BA,GAH0B,2CAAH,qDAMnBC,EAAa,mCAAG,WAAM5B,GAAN,yFACJoB,EAAIM,IAAJ,iBAAkB1B,IADd,uBACnB2B,EADmB,EACnBA,KADmB,kBAGpBA,GAHoB,2CAAH,sDAMbE,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAAIM,IAAJ,gBAAyB,CAC9CH,OAAQ,CACNO,MAAAA,KAHwB,uBACpBH,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdI,EAAW,mCAAG,WAAM/B,GAAN,yFACFoB,EAAIM,IAAJ,iBAAkB1B,EAAlB,aADE,uBACjB2B,EADiB,EACjBA,KADiB,kBAGlBA,GAHkB,2CAAH,sDAMXX,EAAc,mCAAG,WAAMhB,GAAN,yFACLoB,EAAIM,IAAJ,iBAAkB1B,EAAlB,aADK,uBACpB2B,EADoB,EACpBA,KACRK,QAAQC,IAAIN,GAFgB,kBAGrBA,GAHqB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/ReviewsPage/ReviewsItem/ReviewsItem.module.css?02ae","pages/ReviewsPage/ReviewsItem/ReviewsItem.jsx","pages/ReviewsPage/ReviewsPage.jsx","shared/servises/movie-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list_rewiews\":\"ReviewsItem_list_rewiews__gxZc5\",\"reviews_item\":\"ReviewsItem_reviews_item__x1AFU\",\"reviews_author\":\"ReviewsItem_reviews_author__EhCR9\"};","import PropTypes from 'prop-types';\n\nimport css from './ReviewsItem.module.css';\n\nconst ReviewsItem = ({ items }) => {\n  const elements = items.map(({ id, author, content }) => (\n    <li key={id} className={css.reviews_item}>\n      <p className={css.reviews_author}>Author:{author}</p>\n      <p className={css.reviews_content}>{content}</p>\n    </li>\n  ));\n  return <ul className={css.list_rewiews}>{elements}</ul>;\n};\n\nexport default ReviewsItem;\n\nReviewsItem.defaultProps = {\n  items: [],\n};\n\nReviewsItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nimport { getReviewsById } from '../../shared/servises/movie-api';\nimport ReviewsItem from './ReviewsItem/ReviewsItem';\n// import ReviewsItem from './CastItem/CastItem';\n\n// import css from './CastPage.module.css';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getReviewsById(id);\n\n        setReviews([...results]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [id, setError, setLoading, setReviews]);\n\n  return (\n    <section>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error</p>}\n      {!reviews.length > 0 && <p>No reviews</p>}\n      <ReviewsItem items={reviews} />\n    </section>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst API_KEY = '424988524fcdd3be3cb6b3927eeba2ee';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendMoviesToday = async () => {\n  const { data } = await api.get(`/trending/movie/day`);\n\n  return data;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await api.get(`/movie/${id}`);\n\n  return data;\n};\n\nexport const getSearchPosts = async query => {\n  const { data } = await api.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getCastById = async id => {\n  const { data } = await api.get(`/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const getReviewsById = async id => {\n  const { data } = await api.get(`/movie/${id}/reviews`);\n  console.log(data);\n  return data;\n};\n"],"names":["ReviewsItem","elements","items","map","id","author","content","className","css","defaultProps","useState","reviews","setReviews","loading","setLoading","error","setError","useParams","useEffect","fetchCast","getReviewsById","results","message","length","api","axios","baseURL","params","api_key","getTrendMoviesToday","get","data","getMoviesById","getSearchPosts","query","getCastById","console","log"],"sourceRoot":""}